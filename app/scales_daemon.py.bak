import socket
import os
import re
import sys
from time import sleep
import select
from app import db
from threading import Thread
from datetime import datetime, time, date
from app.models import Weight

def close_scales_sock():    # destroy scales socket function
    global scales_con, scales_sock, weight
    scales_con = False
#    scales_sock.shutdown(socket.SHUT_RDWR)
    scales_sock.close()
    scales_sock = None
    weight = 'Connecting to scales...'
    sleep(2)
    print('Daemon: Close socket function call.')

def smscl_weight(weight):
    weight = re.search(r"(?<=ww)\d{6}", repr(weight))
    if weight.group():
        weight = re.search(r"[^0]\d*", repr(weight.group()))
        if weight.group().isnumeric():
            weight = weight.group()
            return True
        else:
            return False

def bgscl_weight(weight)
   weight = re.search("r(?<=\u000203)\d{6}", repr(weight))
   if weight:
       weight = re.search(r"[^0]\d*", repr(weight.group()))
       if weight.group().isnumeric():
            weight = weight.group()
            return True
       else:
           return False

def get_weight():
    global scales_con, scales_sock, weight

    SCALES_HOST = '192.168.6.18'
    SCALES_PORT = 11001

    time_stamp = 0
    time_cur = 0
    weight_stamp = 0
    db_new = True
    scales_con = False
    scales_sock = None
    weight = 'Connecting to scales...'
    try:
        while True:
            if not scales_con:
#                print('Daemon: trying to create socket')
                try:
                    scales_sock = \
                        socket.socket(socket.AF_INET, socket.SOCK_STREAM)
                    scales_sock.connect((SCALES_HOST, SCALES_PORT))
                    scales_con = True
                except BaseException as msg:
#                    print('Daemon: cant connect to scales -', msg)
                    scales_con = False
            else:
                try:
                    weight_rcv = scales_sock.recv(51).decode('ascii')
                    time_cur = int(datetime.now().timestamp())
                    time_pid = int(datetime.now().strftime("%y%m%d%H%M%S"))
                    print('Daemon: recieve -', weight_rcv)
                    if weight_rcv:
                        if weight_rcv.isnumeric():
                            weight = str(weight_rcv)
                            if weight_stamp != weight_rcv:
                                time_stamp = time_cur
                                weight_stamp = weight_rcv
                                db_new = True
                                print('Daemon: time_stamp -', time_pid)
                            else:
                                if time_cur - time_stamp >= 15 and db_new:
                                    weight_db = Weight(mtime=time_cur,
                                                       yard='jel1',
                                                       typ='',
                                                       weight=weight_stamp,
                                                       pid=time_pid)
                                    db.session.add(weight_db)
                                    db.session.commit()
                                    db_new = False
                                    print('Daemon: record added to DB')
                    else:
                        weight = 0
                except BaseException as msg:
                    print('Daemon: recieving error -', msg)
                    weight = 'Connectin to scales...'
                    close_scales_sock()
                    continue
    except KeyboardInterrupt:
        close_scales_sock()
        print('Exit')
    print('I got end of Daemon function')

th = Thread(target=get_weight)
th.daemon = True
th.start()
